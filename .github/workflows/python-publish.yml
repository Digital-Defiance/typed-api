# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  workflow_dispatch:
  release:
    types: [published]
  pull_request:
  push:
    branches:
      - develop

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

        
    - name: Set version to release tag
      id: set_version_tag
      run: echo "VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
      if: github.event_name == 'release'

    - name: Set version to branch name
      id: set_version_branch
      if: github.event_name != 'release'
      run: |
        REF_NAME=${{ github.ref_name }}  # The original ref_name
        REF_NAME=${REF_NAME////}  # Remove all '/'
        COMMIT_HASH="$(echo ${{ github.sha }} | cut -c 1-7)"
        LAST_TAG="$(git describe --tags `git rev-list --tags --max-count=1`)"
        echo "VERSION=$LAST_TAG-$REF_NAME$COMMIT_HASH" >> $GITHUB_ENV
      
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      env:
        PACKAGE_VERSION: ${{ env.VERSION }}
      run: python -m build

    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
